geom_histogram(color = "white") + xlim(25000,100000)
ggplot(data=total.2000, aes(total.2000$usd_goal_real, fill = state)) +
geom_histogram(color = "white") + xlim(5000,100000)
successstarter <- kickstarter.df %>% filter(state == "successful")
failedstarter <- kickstarter.df %>% filter(state == "failed")
failedstarter.1000 <- failedstarter[sample(nrow(failedstarter), 1000, replace = FALSE, prob = NULL),]
successstarter.1000 <- successstarter[sample(nrow(successstarter), 1000, replace = FALSE, prob = NULL),]
successstarter <- kickstarter.df %>% filter(state == "successful")
failedstarter <- kickstarter.df %>% filter(state == "failed")
successstarter.5000 <- successstarter[sample(nrow(successstarter), 5000, replace = FALSE, prob = NULL),]
failedstarter.1000 <- failedstarter[sample(nrow(failedstarter), 5000, replace = FALSE, prob = NULL),]
total.10000 <- rbind(successstarter.5000, failedstarter.1000)
ggplot(data=total.10000, aes(total.10000$usd_goal_real, fill = state)) +
geom_histogram(color = "white") + xlim(0,100000)
ggplot(data=total.10000, aes(total.10000$usd_goal_real, fill = state)) +
geom_histogram(color = "white", bins = 100) + xlim(0,100000)
ggplot(data=total.10000, aes(total.10000$usd_goal_real, fill = state)) +
geom_histogram(color = "white", bins = 50) + xlim(0,100000)
ggplot(data=total.10000, aes(total.10000$usd_goal_real, fill = state)) +
geom_histogram(bins = 100) + xlim(0,100000)
ggplot(data=total.10000, aes(total.10000$usd_goal_real, fill = state)) +
geom_histogram(bins = 50) + xlim(0,100000)
ggplot(successstarter, aes(x = factor(usd_goal_real))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
## scale_y_continuous(labels = percent_format()) #version 3.0.9
scale_y_continuous(labels = percent)
ggplot(successstarter, aes(x = factor(usd_goal_real))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
## scale_y_continuous(labels = percent_format()) #version 3.0.9
scale_y_continuous(labels = percent_format())
ggplot(successstarter, aes(x = factor(usd_goal_real))) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(successstarter, aes(x = factor(usd_goal_real))) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..))) +
labs(y="Percent",
x="Frequency") +
facet_wrap( ~ Var1)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..))) +
labs(y="Percent",
x="Frequency")
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..))) +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..), fill = green)) +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..), fill = "green")) +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter, aes(fill = "green")) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..))) +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..), fill = "green")) +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "green") +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green") +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Frequency") + xlim(0,100000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Frequency") + xlim(0,50000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,50000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent of Successful Cases",
x="Funding Goal") + xlim(0,50000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,50000)
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,50000) + ggtitle("Percent of Successful Cases \n By Funding Goal")
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,50000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(count)/sum(count)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successstarter) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), , fill = "dark green", color = "white") +
labs(y="Percent",
x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
group.df <- kickstarter.df %>%  group_by(main_category)
library(dplyr)
group.df <- kickstarter.df %>%  group_by(main_category)
group.df %>% nrow(group.df$state == "successful")
nrow(group.df$state == "successful")
nrow(group.df)
group.df <- kickstarter.df %>%  group_by(main_category) %>% nrow()
group.df <- kickstarter.df %>%  group_by(main_category)
group.df %>%  nrow()
group.df %>%  summarise(percentSuccessful = nrow(state == "successful")/nrow())
group.df %>%  summarise(percentSuccessful = nrow(state == "successful")/nrow())
group.df %>% nrow(state == "successful")
group.df %>% nrow(group.df[,state == "successful"])
group.df %>% nrow(group.df[state == "successful",])
nrow(group.df[state == "successful",])
group.df %>% summarise(rows = nrow())
group.df %>% summarise(rows = n())
group.df %>% summarise(percentSuccess = n(state == "successful")/n())
View(group.df)
successstarter %>% group_by(main_category)
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
View(success.summary)
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
View(total.summary)
colnames(total.summary)[3] <- "successCount"
library(ggplot2)
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100)) + geom_bar(stat="identity")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100)) + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100), color = main_category) + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, color = main_category)) + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category, color="black")) + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100,  color="black", fill = main_category) + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category), color="black") + geom_bar(stat="identity") + labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
View(total.summary)
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- total.summary %>% head(,10)
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
colnames(total.summary)[3] <- "successCount"
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
total.summary <- within(total.summary,
main_category <- factor(main_category,
levels=names(sort(table(main_category),
decreasing=TRUE))))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=reorder(main_category,main_category,
function(x)-length(x)), y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary <- factor(total.summary, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology"), ordered = TRUE)
ggplot(total.summary, aes(x=reorder(main_category,main_category,
function(x)-length(x)), y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology"))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful")
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful") +
ggtitle("Percent of Successful Projects by Category") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful") +
ggtitle("Percent of Successful Projects by Category") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title="Category"))
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
library(dplyr)
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
View(total.summary)
kickstarter.df <- read.csv("~/Desktop/ks-projects-201801.csv")
library(dplyr)
kickstarter.df <- kickstarter.df %>%  mutate(PercentFunded = usd_pledged_real/usd_goal_real)
kickstarter.df$state[kickstarter.df$state == "canceled"] <- "failed"
kickstarter.df$main_category <- factor(kickstarter.df$main_category, levels = c(1:15),
labels = c("Art", "Comics", "Crafts", "Dance", "Design",
"Fashion", "Film & Video", "Food", "Games",
"Journalism", "Music", "Photography", "Publishing",
"Technology", "Theater"))
kickstarter.df$main_category <- relevel(kickstarter.df$main_category, ref = "Art")
kickstarter.df$state <- as.numeric(kickstarter.df$state == "successful")
failed.df <- kickstarter.df %>% filter(state == "failed")
successful.df <- kickstarter.df %>% filter(state == "successful)
successful.df <- kickstarter.df %>% filter(state == "successful")
ggplot(successful.df) + theme_bw() +
+   geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white")
+   labs(y="Percent",
+        x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
ggplot(successful.df) + theme_bw() +
+   geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white")
+   labs(y="Percent",
+        x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
ggplot(successful.df) + theme_bw() +
+   geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white")
+   labs(y="Percent",
+        x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successful.df) + theme_bw()
+   geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white")
+   labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successful.df) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white") +
labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
successful.df <- kickstarter.df %>% filter(state == "successful")
successful.df <- kickstarter.df %>% filter(state == "successful")
kickstarter.df <- read.csv("~/Desktop/ks-projects-201801.csv")
library(dplyr)
library(ggplot2)
kickstarter.df <- kickstarter.df %>%  mutate(PercentFunded = usd_pledged_real/usd_goal_real)
kickstarter.df$state[kickstarter.df$state == "canceled"] <- "failed"
successful.df <- kickstarter.df %>% filter(state == "successful")
ggplot(successful.df) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white") +
labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
failed.df <- kickstarer.df %>% filter(state == "failed")
failed.df <- kickstarter.df %>% filter(state == "failed")
ggplot(failed.df) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark red", color = "white") +
labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(successful.df) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark green", color = "white") +
labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
ggplot(failed.df) + theme_bw() +
geom_histogram(aes(x=usd_goal_real, y=(..count..)/sum(..count..)), fill = "dark red", color = "white") +
labs(y="Percent", x="Funding Goal") + xlim(0,39000) + ggtitle("Percent of Successful Cases \n By Funding Goal") +  theme(plot.title = element_text(hjust = 0.5))
group.df <- kickstarter.df %>%  group_by(main_category)
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful") +
ggtitle("Percent of Successful Projects by Category") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title="Category"))
successstarter <- successstarter %>% group_by(main_category)
success.summary <- successstarter %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
group.df <- kickstarter.df %>%  group_by(main_category)
successful.df <- successful.df %>% group_by(main_category)
success.summary <- successful.df %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
levels(total.summary$main_category) <- c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publish", "Food", "Fashion",
"Technology")
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
View(total.summary)
successful.df <- successful.df %>% group_by(main_category)
success.summary <- successful.df %>% group_by(main_category) %>% summarise(count = n())
total.summary <- kickstarter.df %>% group_by(main_category) %>% summarise(total.count=n())
total.summary <- inner_join(total.summary, success.summary)
colnames(total.summary)[3] <- "successCount"
total.summary <- total.summary %>% arrange(desc(total.count))
total.summary <- head(total.summary, 10)
total.summary$main_category <- factor(total.summary$main_category, levels = c("Theater", "Music", "Art", "Film & Video",
"Games", "Design", "Publishing", "Food", "Fashion",
"Technology"))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful") +
ggtitle("Percent of Successful Projects by Category") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title="Category"))
ggplot(total.summary, aes(x=main_category, y=(successCount / total.count) * 100, fill = main_category)) +
geom_bar(stat="identity", color="black") +
labs(x ="Category", y = "Percent Successful") +
ggtitle("Percent of Projects Successful by Category") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title="Category"))
View(kickstarter.df)
library(dplyr)
View(kickstarter.df %>% select(name, main_category, deadline, goal, launched, state))
View(kickstarter.df %>% select(name, main_category, deadline, goal, launched, state, PercentFunded ))
View(kickstarter.df %>% select(name, main_category, deadline, goal, launched, state, PercentFunded*100 ))
kickstarter.df <- select(name, main_category, deadline, goal, launched, state, PercentFunded )
kickstarter.df <- kickstarter.df %>% select(name, main_category, deadline, goal, launched, state, PercentFunded )
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
View(kickstarter.df)
options(scipen=999)
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
kickstarter.df <- read.csv("~/Desktop/ks-projects-201801.csv")
kickstarter.df <- kickstarter.df %>%  mutate(PercentFunded = usd_pledged_real/usd_goal_real)
kickstarter.df$state[kickstarter.df$state == "canceled"] <- "failed"
kickstarter.df <- kickstarter.df %>% select(name, main_category, deadline, goal, launched, state, PercentFunded )
View(kickstarter.df)
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
kickstarter.df$PercentFunded <- round(PercentFunded, digits = 2)
kickstarter.df$PercentFunded <- round(kickstarter.df$PercentFunded, digits = 2)
View(kickstarter.df)
View(kickstarter.df %>% select(-launched))
View(kickstarter.df %>% select(-launched, -deadline))
kickstarter.df <- read.csv("~/Desktop/ks-projects-201801.csv")
kickstarter.df <- kickstarter.df %>%  mutate(PercentFunded = usd_pledged_real/usd_goal_real)
kickstarter.df$state[kickstarter.df$state == "canceled"] <- "failed"
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
kickstarter.df$PercentFunded <- round(kickstarter.df$PercentFunded, digits = 2)
options(scipen=999)
View(kickstarter.df %>% select(name, main_category, coutry, goal, PercentFunded, state))
View(kickstarter.df %>% select(name, main_category, country, goal, PercentFunded, state))
View(kickstarter.df %>% select(name, main_category, country, usd_goal_real, usd_pledged_real, PercentFunded, state))
kickstarter.df <- read.csv("~/Desktop/ks-projects-201801.csv")
kickstarter.df <- kickstarter.df %>%  mutate(PercentFunded = usd_pledged_real/usd_goal_real)
View(kickstarter.df %>% select(name, main_category, country, usd_goal_real, usd_pledged_real, PercentFunded, state))
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
kickstarter.df$PercentFunded <- round(kickstarter.df$PercentFunded, digits = 2)
View(kickstarter.df %>% select(name, main_category, country, usd_goal_real, usd_pledged_real, PercentFunded, state))
kickstarter.df <- read.csv("~/Desktop/kickstarter Revised.csv")
View(kickstarter.df)
colnames(kickstarter.df)[7] <- "Duration"
View(kickstarter.df %>% select(name, main_category, country, Duration, usd_goal_real, usd_pledged_real, PercentFunded, state))
colnames(kickstarter.df)[7] <- "Duration (days)"
View(kickstarter.df %>% select(name, main_category, country, Duration, usd_goal_real, usd_pledged_real, PercentFunded, state))
View(kickstarter.df %>% select(name, main_category, country, Duration (days), usd_goal_real, usd_pledged_real, PercentFunded, state))
View(kickstarter.df %>% select(name, main_category, country, "Duration (days)", usd_goal_real, usd_pledged_real, PercentFunded, state))
kickstarter.df$PercentFunded <- kickstarter.df$PercentFunded * 100
kickstarter.df$PercentFunded <- round(kickstarter.df$PercentFunded, digits = 2)
View(kickstarter.df %>% select(name, main_category, country, "Duration (days)", usd_goal_real, usd_pledged_real, PercentFunded, state))
View(kickstarter.df %>% select(name, main_category, country, "Duration (days)", usd_goal_real, usd_pledged_real, PercentFunded, state))
View(kickstarter.df)
View(total.summary)
library(httr)
library(XML)
library(httpuv)
options("httr_oob_default" = T)
yahoo    <-oauth_endpoints("yahoo")
myapp <- oauth_app("Fantasy Explorer", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
sig <- sign_oauth1.0(myapp, yahoo_token$oauth_token, yahoo_token$oauth_token_secret)
save(sig,file="Fantasy.Rdata")
install.packages("XML")
install.packages("httpuv")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source(keys.r)
source("keys.r")
# Setup the environment
library(httr)
library(XML)
library(httpuv)
options("httr_oob_default" = T)
setwd("~/Desktop/FantasyProject/")
source("keys.r")
yahoo    <-oauth_endpoints("yahoo")
myapp <- oauth_app("Fantasy Explorer", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
save(sig,file="Fantasy.Rdata")
# Setup the environment
library(httr)
library(XML)
library(httpuv)
options("httr_oob_default" = T)
setwd("~/Desktop/FantasyProject/")
source("keys.r")
yahoo <- oauth_endpoints("yahoo")
myapp <- oauth_app("Fantasy Explorer", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
yahoo <- oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
myapp
myapp <- oauth_app("Fantasy Explorer", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
save(sig,file="Fantasy.Rdata")
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = cKey, secret = cSecret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
source('~/Desktop/FantasyProject/ProjectFile.R')
yahooFantasy_get_oauth_token <- function(cKey,cSecret) {
# Creates Oauth Token for connecting to Yahoo API and saves it.
#
# Inputs:
#   cKey       Credential Key (register here: https://developer.yahoo.com/apps/create)
#   cSecret    Credential Secret
#
# Outputs:
#   yahoo_token
yahoo <- oauth_endpoints("yahoo");
myapp <- oauth_app("yahoo", key=cKey, secret=cSecret);
yahoo_token<- oauth1.0_token(yahoo, myapp, cache=FALSE);
save(yahoo_token,file="yahoo_token.Rdata");
return(yahoo_token);
}
yahooFantasy_get_oauth_token <- function(userKey,userSecret) {
# Creates Oauth Token for connecting to Yahoo API and saves it.
#
# Inputs:
#   cKey       Credential Key (register here: https://developer.yahoo.com/apps/create)
#   cSecret    Credential Secret
#
# Outputs:
#   yahoo_token
yahoo <- oauth_endpoints("yahoo");
myapp <- oauth_app("yahoo", key=userKey, secret=userSecret);
yahoo_token<- oauth1.0_token(yahoo, myapp, cache=FALSE);
save(yahoo_token,file="yahoo_token.Rdata");
return(yahoo_token);
}
yahooFantasy_get_oauth_token(cKey, cSecret)
source('~/Desktop/FantasyProject/ProjectFile.R')
